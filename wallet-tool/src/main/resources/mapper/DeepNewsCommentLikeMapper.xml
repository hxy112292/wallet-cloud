<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.blockchain.wallet.mapper.DeepNewsCommentLikeMapper">
  <resultMap id="BaseResultMap" type="org.blockchain.wallet.entity.DeepNewsCommentLike">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, comment_id, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from deep_news_comment_like
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectBySelective" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from deep_news_comment_like
    where 1 = 1
    <if test="userId != null">
      and user_id = #{userId, jdbcType=INTEGER}
    </if>
    <if test="commentId != null">
      and comment_id = #{commentId, jdbcType=INTEGER}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from deep_news_comment_like
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBySelective" parameterType="map">
    delete from deep_news_comment_like
    where user_id = #{userId, jdbcType=INTEGER} and comment_id = #{commentId, jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.blockchain.wallet.entity.DeepNewsCommentLike">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into deep_news_comment_like (comment_id, user_id)
    values (#{commentId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.blockchain.wallet.entity.DeepNewsCommentLike">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into deep_news_comment_like
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.blockchain.wallet.entity.DeepNewsCommentLike">
    update deep_news_comment_like
    <set>
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.blockchain.wallet.entity.DeepNewsCommentLike">
    update deep_news_comment_like
    set comment_id = #{commentId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
