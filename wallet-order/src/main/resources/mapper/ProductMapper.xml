<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.blockchain.wallet.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="org.blockchain.wallet.entity.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="original_price" jdbcType="INTEGER" property="originalPrice" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="sku_list" jdbcType="VARCHAR" property="skuList" typeHandler="org.blockchain.wallet.typehandler.ListTypeHandler" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, description, original_price, price, type, status, image_url, create_time,
    update_time, sku_list
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from wallet_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectBySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from wallet_product
    where 1 = 1
    <if test="type != null and type != '' and type != '-全部-'">
      and type = #{type,jdbcType=VARCHAR}
    </if>
    <if test="status != null and status!='' or status == 0">
      and status = #{status,jdbcType=INTEGER}
    </if>
    <if test="name != null and name!=''">
      and name like concat('%',#{name,jdbcType=VARCHAR},'%')
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wallet_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.blockchain.wallet.entity.Product">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into wallet_product (name, description, original_price,
      price, type, status,
      image_url, create_time, update_time,
      sku_list
      )
    values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{originalPrice,jdbcType=INTEGER},
      #{price,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
      #{imageUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{skuList,jdbcType=VARCHAR,typeHandler=org.blockchain.wallet.typehandler.ListTypeHandler}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.blockchain.wallet.entity.Product">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into wallet_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="originalPrice != null">
        original_price,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="skuList != null">
        sku_list,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="originalPrice != null">
        #{originalPrice,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="skuList != null">
        #{skuList,jdbcType=VARCHAR,typeHandler=org.blockchain.wallet.typehandler.ListTypeHandler},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.blockchain.wallet.entity.Product">
    update wallet_product
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="originalPrice != null">
        original_price = #{originalPrice,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="skuList != null">
        sku_list = #{skuList,jdbcType=VARCHAR,typeHandler=org.blockchain.wallet.typehandler.ListTypeHandler},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.blockchain.wallet.entity.Product">
    update wallet_product
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      original_price = #{originalPrice,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      sku_list = #{skuList,jdbcType=VARCHAR,typeHandler=org.blockchain.wallet.typehandler.ListTypeHandler}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
